package net.minecraft.world.gen.feature.structure;

import com.google.common.collect.ImmutableList;
import com.mojang.datafixers.util.Pair;
import net.minecraft.block.Blocks;
import net.minecraft.util.Direction;
import net.minecraft.util.ResourceLocation;
import net.minecraft.world.gen.feature.jigsaw.JigsawManager;
import net.minecraft.world.gen.feature.jigsaw.JigsawPattern;
import net.minecraft.world.gen.feature.jigsaw.SingleJigsawPiece;
import net.minecraft.world.gen.feature.template.AlwaysTrueRuleTest;
import net.minecraft.world.gen.feature.template.AxisAlignedLinearPosTest;
import net.minecraft.world.gen.feature.template.RandomBlockMatchRuleTest;
import net.minecraft.world.gen.feature.template.RuleEntry;
import net.minecraft.world.gen.feature.template.RuleStructureProcessor;
import net.minecraft.world.gen.feature.template.StructureProcessor;

public class BastionRemnantsTreasurePools {
   public static void func_236262_a_() {
   }

   static {
      ImmutableList<StructureProcessor> immutablelist = ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235411_nu_, 0.3F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235412_nv_.getDefaultState()), new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235411_nu_, 0.15F), AlwaysTrueRuleTest.INSTANCE, Blocks.AIR.getDefaultState()), new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235411_nu_, 0.3F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235406_np_.getDefaultState()))));
      ImmutableList<StructureProcessor> immutablelist1 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235411_nu_, 0.35F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235412_nv_.getDefaultState()), new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235413_nw_, 0.1F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235412_nv_.getDefaultState()), BastionRemnantsMobsPools.field_236260_a_)));
      ImmutableList<StructureProcessor> immutablelist2 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235411_nu_, 0.01F), AlwaysTrueRuleTest.INSTANCE, Blocks.AIR.getDefaultState()), new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235411_nu_, 0.5F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235412_nv_.getDefaultState()), new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235411_nu_, 0.3F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235406_np_.getDefaultState()))));
      ImmutableList<StructureProcessor> immutablelist3 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new RuleEntry(new RandomBlockMatchRuleTest(Blocks.GOLD_BLOCK, 0.3F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235412_nv_.getDefaultState()), new RuleEntry(AlwaysTrueRuleTest.INSTANCE, AlwaysTrueRuleTest.INSTANCE, new AxisAlignedLinearPosTest(0.0F, 0.05F, 0, 100, Direction.Axis.Y), Blocks.AIR.getDefaultState()))));
      ImmutableList<StructureProcessor> immutablelist4 = ImmutableList.of(new RuleStructureProcessor(ImmutableList.of(new RuleEntry(new RandomBlockMatchRuleTest(Blocks.MAGMA_BLOCK, 0.75F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235412_nv_.getDefaultState()), new RuleEntry(new RandomBlockMatchRuleTest(Blocks.field_235412_nv_, 0.15F), AlwaysTrueRuleTest.INSTANCE, Blocks.field_235411_nu_.getDefaultState()), BastionRemnantsMobsPools.field_236260_a_)));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/starters"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/big_air_full", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/bases"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/bases/lava_basin", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/stairs"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/stairs/lower_stairs", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/bases/centers"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/bases/centers/center_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/bases/centers/center_1", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/bases/centers/center_2", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/bases/centers/center_3", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/brains"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/brains/center_brain", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/walls"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/walls/lava_wall", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/entrance_wall", immutablelist2), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/walls/outer"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/walls/outer/top_corner", immutablelist2), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/outer/mid_corner", immutablelist2), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/outer/bottom_corner", immutablelist2), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/outer/outer_wall", immutablelist2), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/outer/medium_outer_wall", immutablelist2), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/outer/tall_outer_wall", immutablelist2), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/walls/bottom"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/walls/bottom/wall_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/bottom/wall_1", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/bottom/wall_2", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/bottom/wall_3", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/walls/mid"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/walls/mid/wall_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/mid/wall_1", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/mid/wall_2", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/walls/top"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/walls/top/main_entrance", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/top/wall_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/walls/top/wall_1", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/connectors"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/connectors/center_to_wall_middle", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/connectors/center_to_wall_top", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/connectors/center_to_wall_top_entrance", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/entrances"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/entrances/entrance_0", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/ramparts"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/ramparts/mid_wall_main", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/ramparts/mid_wall_side", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/ramparts/bottom_wall_0", immutablelist4), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/ramparts/top_wall", immutablelist3), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/ramparts/lava_basin_side", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/ramparts/lava_basin_main", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/corners/bottom"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/corners/bottom/corner_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/corners/bottom/corner_1", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/corners/edges"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/corners/edges/bottom", immutablelist2), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/corners/edges/middle", immutablelist2), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/corners/edges/top", immutablelist2), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/corners/middle"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/corners/middle/corner_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/corners/middle/corner_1", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/corners/top"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/corners/top/corner_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/corners/top/corner_1", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/extensions/large_pool"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/empty", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/empty", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/fire_room", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/large_bridge_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/large_bridge_1", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/large_bridge_2", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/large_bridge_3", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/roofed_bridge", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/empty", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/extensions/small_pool"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/empty", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/fire_room", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/empty", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/small_bridge_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/small_bridge_1", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/small_bridge_2", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/small_bridge_3", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/extensions/houses"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/house_0", immutablelist1), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/extensions/house_1", immutablelist1), 1)), JigsawPattern.PlacementBehaviour.RIGID));
      JigsawManager.REGISTRY.register(new JigsawPattern(new ResourceLocation("bastion/treasure/roofs"), new ResourceLocation("empty"), ImmutableList.of(Pair.of(new SingleJigsawPiece("bastion/treasure/roofs/wall_roof", immutablelist), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/roofs/corner_roof", immutablelist), 1), Pair.of(new SingleJigsawPiece("bastion/treasure/roofs/center_roof", immutablelist), 1)), JigsawPattern.PlacementBehaviour.RIGID));
   }
}